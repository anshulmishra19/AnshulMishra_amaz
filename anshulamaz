{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7956405,"sourceType":"datasetVersion","datasetId":4679835},{"sourceId":9383238,"sourceType":"datasetVersion","datasetId":5690179},{"sourceId":9405461,"sourceType":"datasetVersion","datasetId":5710308}],"dockerImageVersionId":30673,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!git clone https://github.com/anshulmishra19/AnshulMishra_amaz","metadata":{"execution":{"iopub.status.busy":"2024-09-16T01:34:22.353095Z","iopub.execute_input":"2024-09-16T01:34:22.353518Z","iopub.status.idle":"2024-09-16T01:34:43.721476Z","shell.execute_reply.started":"2024-09-16T01:34:22.353486Z","shell.execute_reply":"2024-09-16T01:34:43.720051Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Cloning into 'AnshulMishra_amaz'...\nfatal: unable to access 'https://github.com/anshulmishra19/AnshulMishra_amaz/': Could not resolve host: github.com\n","output_type":"stream"}]},{"cell_type":"code","source":"!cd PaddleOCR","metadata":{"execution":{"iopub.status.busy":"2024-09-15T17:42:09.002619Z","iopub.execute_input":"2024-09-15T17:42:09.003013Z","iopub.status.idle":"2024-09-15T17:42:09.979833Z","shell.execute_reply.started":"2024-09-15T17:42:09.00297Z","shell.execute_reply":"2024-09-15T17:42:09.978724Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install -r /kaggle/working/PaddleOCR/requirements.txt","metadata":{"execution":{"iopub.status.busy":"2024-09-15T17:42:09.982294Z","iopub.execute_input":"2024-09-15T17:42:09.982598Z","iopub.status.idle":"2024-09-15T17:42:29.699124Z","shell.execute_reply.started":"2024-09-15T17:42:09.982569Z","shell.execute_reply":"2024-09-15T17:42:29.697969Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!python -m pip install paddlepaddle-gpu==2.6.0 -i https://pypi.tuna.tsinghua.edu.cn/simple","metadata":{"execution":{"iopub.status.busy":"2024-09-15T17:42:29.700586Z","iopub.execute_input":"2024-09-15T17:42:29.700918Z","iopub.status.idle":"2024-09-15T17:44:18.109861Z","shell.execute_reply.started":"2024-09-15T17:42:29.700888Z","shell.execute_reply":"2024-09-15T17:44:18.108823Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install \"paddleocr>=2.0.1\" # Recommend to use version 2.0.1+","metadata":{"execution":{"iopub.status.busy":"2024-09-15T17:44:18.111495Z","iopub.execute_input":"2024-09-15T17:44:18.112395Z","iopub.status.idle":"2024-09-15T17:44:31.230199Z","shell.execute_reply.started":"2024-09-15T17:44:18.112356Z","shell.execute_reply":"2024-09-15T17:44:31.229268Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!paddleocr --image_dir /kaggle/input/sample1amazon/1400mg.jpg --use_angle_cls true --lang en --use_gpu True --ocr_version PP-OCRv4","metadata":{"execution":{"iopub.status.busy":"2024-09-15T17:46:29.273258Z","iopub.execute_input":"2024-09-15T17:46:29.274125Z","iopub.status.idle":"2024-09-15T17:46:42.334662Z","shell.execute_reply.started":"2024-09-15T17:46:29.274072Z","shell.execute_reply":"2024-09-15T17:46:42.333547Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pip install pandas requests Pillow","metadata":{"execution":{"iopub.status.busy":"2024-09-15T18:13:21.253027Z","iopub.execute_input":"2024-09-15T18:13:21.253853Z","iopub.status.idle":"2024-09-15T18:13:33.428693Z","shell.execute_reply.started":"2024-09-15T18:13:21.253816Z","shell.execute_reply":"2024-09-15T18:13:33.427588Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nfrom paddleocr import PaddleOCR\nimport requests\nfrom io import BytesIO\nfrom PIL import Image\n\n# Initialize the OCR model\nocr = PaddleOCR(use_angle_cls=True, lang='en')","metadata":{"execution":{"iopub.status.busy":"2024-09-15T18:13:39.131437Z","iopub.execute_input":"2024-09-15T18:13:39.132354Z","iopub.status.idle":"2024-09-15T18:13:45.259792Z","shell.execute_reply.started":"2024-09-15T18:13:39.132319Z","shell.execute_reply":"2024-09-15T18:13:45.258944Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Function to download the image from a URL and apply OCR to extract text\ndef extract_ocr_text(image_url):\n    try:\n        response = requests.get(image_url)\n        image = Image.open(BytesIO(response.content))\n        ocr_results = ocr.ocr(image)\n        extracted_text = []\n        for line in ocr_results:\n            for result in line:\n                text = result[1][0]  # Extract text only\n                extracted_text.append(text)\n        return ' '.join(extracted_text)\n    except Exception as e:\n        return str(e)","metadata":{"execution":{"iopub.status.busy":"2024-09-15T19:25:09.694994Z","iopub.execute_input":"2024-09-15T19:25:09.695367Z","iopub.status.idle":"2024-09-15T19:25:09.701456Z","shell.execute_reply.started":"2024-09-15T19:25:09.695336Z","shell.execute_reply":"2024-09-15T19:25:09.700541Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/amazon-ml-challenge/student_resource 3/dataset/train.csv')","metadata":{"execution":{"iopub.status.busy":"2024-09-15T18:17:18.311736Z","iopub.execute_input":"2024-09-15T18:17:18.312508Z","iopub.status.idle":"2024-09-15T18:17:18.908643Z","shell.execute_reply.started":"2024-09-15T18:17:18.312479Z","shell.execute_reply":"2024-09-15T18:17:18.907847Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-15T18:17:26.087534Z","iopub.execute_input":"2024-09-15T18:17:26.087926Z","iopub.status.idle":"2024-09-15T18:17:26.105104Z","shell.execute_reply.started":"2024-09-15T18:17:26.087894Z","shell.execute_reply":"2024-09-15T18:17:26.104213Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install tqdm\nfrom tqdm.notebook import tqdm","metadata":{"execution":{"iopub.status.busy":"2024-09-15T19:20:36.003924Z","iopub.execute_input":"2024-09-15T19:20:36.004808Z","iopub.status.idle":"2024-09-15T19:20:48.392243Z","shell.execute_reply.started":"2024-09-15T19:20:36.004775Z","shell.execute_reply":"2024-09-15T19:20:48.391144Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_sampled = df.sample(frac=0.05, random_state=42)  ","metadata":{"execution":{"iopub.status.busy":"2024-09-15T19:22:19.762682Z","iopub.execute_input":"2024-09-15T19:22:19.763515Z","iopub.status.idle":"2024-09-15T19:22:19.780557Z","shell.execute_reply.started":"2024-09-15T19:22:19.763483Z","shell.execute_reply":"2024-09-15T19:22:19.779482Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def process_row(row):\n    return extract_ocr_text(row['image_link'])","metadata":{"execution":{"iopub.status.busy":"2024-09-15T19:23:52.119935Z","iopub.execute_input":"2024-09-15T19:23:52.120848Z","iopub.status.idle":"2024-09-15T19:23:52.125762Z","shell.execute_reply.started":"2024-09-15T19:23:52.120807Z","shell.execute_reply":"2024-09-15T19:23:52.124785Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from concurrent.futures import ThreadPoolExecutor","metadata":{"execution":{"iopub.status.busy":"2024-09-15T19:23:26.850979Z","iopub.execute_input":"2024-09-15T19:23:26.851657Z","iopub.status.idle":"2024-09-15T19:23:26.855871Z","shell.execute_reply.started":"2024-09-15T19:23:26.851611Z","shell.execute_reply":"2024-09-15T19:23:26.854948Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tqdm.pandas()\nwith ThreadPoolExecutor(max_workers=8) as executor:\n    df_sampled['ocr_text'] = list(tqdm(executor.map(process_row, df_sampled.to_dict('records')), total=len(df_sampled)))\n#df_sampled['ocr_text'] = df_sampled['image_link'].progress_apply(extract_text_from_image)","metadata":{"execution":{"iopub.status.busy":"2024-09-15T19:25:14.74078Z","iopub.execute_input":"2024-09-15T19:25:14.741157Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_sampled.to_csv('train_with_ocr.csv', index=False)","metadata":{},"execution_count":null,"outputs":[]}]}